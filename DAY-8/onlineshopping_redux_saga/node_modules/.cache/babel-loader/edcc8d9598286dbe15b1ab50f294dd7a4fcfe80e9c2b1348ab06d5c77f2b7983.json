{"ast":null,"code":"import { call, put, retry, takeLatest } from \"redux-saga/effects\";\nimport { SagaActions } from \"./sagaactions\";\nimport axios from \"axios\";\nimport { setAllProducts } from \"../redux/slices/products.slices\";\nfunction getProducts() {\n  return axios.get(\"http://localhost:3500/products\");\n}\nfunction* fetchProductsAsync() {\n  try {\n    let response = yield call(getProducts);\n    //   console.log(response.data);\n    yield put(setAllProducts(response.data)); // dispatching the action to reducer\n  } catch (error) {\n    console.log(\"Failed !\");\n  }\n}\nfunction* retryFetchProductsSaga() {\n  try {\n    const SECOND = 1000;\n    const response = yield retry(3, 10 * SECOND, getProducts);\n    yield put(setAllProducts(response.data));\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function* rootSaga() {\n  // yield takeLatest(SagaActions.FETCH_PRODUCTS_ASYNC, fetchProductsAsync);\n  yield takeLatest(SagaActions.FETCH_PRODUCTS_ASYNC, retryFetchProductsSaga);\n}","map":{"version":3,"names":["call","put","retry","takeLatest","SagaActions","axios","setAllProducts","getProducts","get","fetchProductsAsync","response","data","error","console","log","retryFetchProductsSaga","SECOND","rootSaga","FETCH_PRODUCTS_ASYNC"],"sources":["/Users/renyadav/Desktop/Trainings/React Training/Day-1/PS_React_Redux_July_2023/DAY-8/onlineshopping_redux_saga/src/saga/saga.ts"],"sourcesContent":["import { call, put, retry, takeLatest } from \"redux-saga/effects\";\nimport { SagaActions } from \"./sagaactions\";\nimport axios from \"axios\";\nimport { ProductModel } from \"../models/product.model\";\nimport { setAllProducts } from \"../redux/slices/products.slices\";\n\ntype AxiosResponse = {\n  data: ProductModel[];\n  status: number;\n  statusText: string;\n  headers: any;\n  config: any;\n  request: any;\n};\n\nfunction getProducts() {\n  return axios.get<ProductModel[]>(\"http://localhost:3500/products\");\n}\n\nfunction* fetchProductsAsync() {\n  try {\n    let response: AxiosResponse = yield call(getProducts);\n    //   console.log(response.data);\n    yield put(setAllProducts(response.data)); // dispatching the action to reducer\n  } catch (error) {\n    console.log(\"Failed !\");\n  }\n}\n\nfunction* retryFetchProductsSaga() {\n  try {\n    const SECOND = 1000;\n    const response: AxiosResponse = yield retry(3, 10 * SECOND, getProducts);\n    yield put(setAllProducts(response.data));\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* rootSaga() {\n  // yield takeLatest(SagaActions.FETCH_PRODUCTS_ASYNC, fetchProductsAsync);\n  yield takeLatest(SagaActions.FETCH_PRODUCTS_ASYNC, retryFetchProductsSaga);\n}\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AACjE,SAASC,WAAW,QAAQ,eAAe;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,QAAQ,iCAAiC;AAWhE,SAASC,WAAWA,CAAA,EAAG;EACrB,OAAOF,KAAK,CAACG,GAAG,CAAiB,gCAAgC,CAAC;AACpE;AAEA,UAAUC,kBAAkBA,CAAA,EAAG;EAC7B,IAAI;IACF,IAAIC,QAAuB,GAAG,MAAMV,IAAI,CAACO,WAAW,CAAC;IACrD;IACA,MAAMN,GAAG,CAACK,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB;AACF;AAEA,UAAUC,sBAAsBA,CAAA,EAAG;EACjC,IAAI;IACF,MAAMC,MAAM,GAAG,IAAI;IACnB,MAAMN,QAAuB,GAAG,MAAMR,KAAK,CAAC,CAAC,EAAE,EAAE,GAAGc,MAAM,EAAET,WAAW,CAAC;IACxE,MAAMN,GAAG,CAACK,cAAc,CAACI,QAAQ,CAACC,IAAI,CAAC,CAAC;EAC1C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB;AACF;AAEA,OAAO,UAAUK,QAAQA,CAAA,EAAG;EAC1B;EACA,MAAMd,UAAU,CAACC,WAAW,CAACc,oBAAoB,EAAEH,sBAAsB,CAAC;AAC5E"},"metadata":{},"sourceType":"module","externalDependencies":[]}